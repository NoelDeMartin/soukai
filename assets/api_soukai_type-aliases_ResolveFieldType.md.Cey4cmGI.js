import{_ as a,c as o,o as t,ag as d}from"./chunks/framework.DPDPlp3K.js";const y=JSON.parse('{"title":"Type Alias: ResolveFieldType<T, TKey>","description":"","frontmatter":{"editLink":false,"search":false,"next":false,"prev":false},"headers":[],"relativePath":"api/soukai/type-aliases/ResolveFieldType.md","filePath":"api/soukai/type-aliases/ResolveFieldType.md"}'),l={name:"api/soukai/type-aliases/ResolveFieldType.md"};function s(r,e,c,i,p,n){return t(),o("div",null,e[0]||(e[0]=[d('<h1 id="type-alias-resolvefieldtype-t-tkey" tabindex="-1">Type Alias: ResolveFieldType&lt;T, TKey&gt; <a class="header-anchor" href="#type-alias-resolvefieldtype-t-tkey" aria-label="Permalink to &quot;Type Alias: ResolveFieldType\\&lt;T, TKey\\&gt;&quot;">​</a></h1><blockquote><p><strong>ResolveFieldType</strong>&lt;<code>T</code>, <code>TKey</code>&gt; = <code>T</code> <em>extends</em> <em>typeof</em> <a href="./../variables/FieldType.html#number"><code>Number</code></a> ? <code>number</code> : <code>T</code> <em>extends</em> <em>typeof</em> <a href="./../variables/FieldType.html#string"><code>String</code></a> ? <code>string</code> : <code>T</code> <em>extends</em> <em>typeof</em> <a href="./../variables/FieldType.html#boolean"><code>Boolean</code></a> ? <code>boolean</code> : <code>T</code> <em>extends</em> <em>typeof</em> <a href="./../variables/FieldType.html#date"><code>Date</code></a> ? <code>Date</code> : <code>T</code> <em>extends</em> <em>typeof</em> <a href="./../variables/FieldType.html#key"><code>Key</code></a> ? <code>TKey</code> : <code>T</code> <em>extends</em> <em>typeof</em> <a href="./../variables/FieldType.html#any"><code>Any</code></a> ? <code>any</code> : <code>never</code></p></blockquote><p>Defined in: <a href="https://github.com/NoelDeMartin/soukai/blob/80a9cd0653028a9a3e60c64c7a98a0e132615ce8/packages/soukai/src/models/inference.ts#L72" target="_blank" rel="noreferrer">packages/soukai/src/models/inference.ts:72</a></p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="t" tabindex="-1">T <a class="header-anchor" href="#t" aria-label="Permalink to &quot;T&quot;">​</a></h3><p><code>T</code> <em>extends</em> <a href="./FieldTypeValue.html"><code>FieldTypeValue</code></a></p><h3 id="tkey" tabindex="-1">TKey <a class="header-anchor" href="#tkey" aria-label="Permalink to &quot;TKey&quot;">​</a></h3><p><code>TKey</code> <em>extends</em> <a href="./Key.html"><code>Key</code></a></p>',8)]))}const T=a(l,[["render",s]]);export{y as __pageData,T as default};
