import{_ as a,c as o,o as t,ag as r}from"./chunks/framework.DPDPlp3K.js";const p=JSON.parse('{"title":"Type Alias: FieldDefinitionBase<T>","description":"","frontmatter":{"editLink":false,"search":false,"next":false,"prev":false},"headers":[],"relativePath":"api/soukai/type-aliases/FieldDefinitionBase.md","filePath":"api/soukai/type-aliases/FieldDefinitionBase.md"}'),i={name:"api/soukai/type-aliases/FieldDefinitionBase.md"};function l(s,e,n,d,c,h){return t(),o("div",null,e[0]||(e[0]=[r('<h1 id="type-alias-fielddefinitionbase-t" tabindex="-1">Type Alias: FieldDefinitionBase&lt;T&gt; <a class="header-anchor" href="#type-alias-fielddefinitionbase-t" aria-label="Permalink to &quot;Type Alias: FieldDefinitionBase\\&lt;T\\&gt;&quot;">​</a></h1><blockquote><p><strong>FieldDefinitionBase</strong>&lt;<code>T</code>&gt; = <code>T</code> &amp; <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/NoelDeMartin/soukai/blob/80a9cd0653028a9a3e60c64c7a98a0e132615ce8/packages/soukai/src/models/fields.ts#L43" target="_blank" rel="noreferrer">packages/soukai/src/models/fields.ts:43</a></p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="alias" tabindex="-1">alias? <a class="header-anchor" href="#alias" aria-label="Permalink to &quot;alias?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>alias</strong>: <code>string</code></p></blockquote><h3 id="cast" tabindex="-1">cast()? <a class="header-anchor" href="#cast" aria-label="Permalink to &quot;cast()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>cast</strong>: (<code>value</code>) =&gt; <code>unknown</code></p></blockquote><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="value" tabindex="-1">value <a class="header-anchor" href="#value" aria-label="Permalink to &quot;value&quot;">​</a></h5><p><code>unknown</code></p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>unknown</code></p><h3 id="deserialize" tabindex="-1">deserialize()? <a class="header-anchor" href="#deserialize" aria-label="Permalink to &quot;deserialize()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>deserialize</strong>: (<code>value</code>) =&gt; <code>unknown</code></p></blockquote><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="value-1" tabindex="-1">value <a class="header-anchor" href="#value-1" aria-label="Permalink to &quot;value&quot;">​</a></h5><p><code>any</code></p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>unknown</code></p><h3 id="get" tabindex="-1">get()? <a class="header-anchor" href="#get" aria-label="Permalink to &quot;get()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>get</strong>: (<code>this</code>) =&gt; <code>unknown</code></p></blockquote><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="this" tabindex="-1">this <a class="header-anchor" href="#this" aria-label="Permalink to &quot;this&quot;">​</a></h5><p><a href="./../classes/Model.html"><code>Model</code></a></p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>unknown</code></p><h3 id="required" tabindex="-1">required? <a class="header-anchor" href="#required" aria-label="Permalink to &quot;required?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>required</strong>: <code>boolean</code></p></blockquote><h3 id="serialize" tabindex="-1">serialize()? <a class="header-anchor" href="#serialize" aria-label="Permalink to &quot;serialize()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>serialize</strong>: (<code>value</code>) =&gt; <code>unknown</code></p></blockquote><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="value-2" tabindex="-1">value <a class="header-anchor" href="#value-2" aria-label="Permalink to &quot;value&quot;">​</a></h5><p><code>any</code></p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>unknown</code></p><h3 id="set" tabindex="-1">set()? <a class="header-anchor" href="#set" aria-label="Permalink to &quot;set()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>set</strong>: (<code>this</code>, <code>value</code>) =&gt; <code>void</code></p></blockquote><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="this-1" tabindex="-1">this <a class="header-anchor" href="#this-1" aria-label="Permalink to &quot;this&quot;">​</a></h5><p><a href="./../classes/Model.html"><code>Model</code></a></p><h5 id="value-3" tabindex="-1">value <a class="header-anchor" href="#value-3" aria-label="Permalink to &quot;value&quot;">​</a></h5><p><code>unknown</code></p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="t" tabindex="-1">T <a class="header-anchor" href="#t" aria-label="Permalink to &quot;T&quot;">​</a></h3><p><code>T</code> = <code>unknown</code></p>',48)]))}const b=a(i,[["render",l]]);export{p as __pageData,b as default};
