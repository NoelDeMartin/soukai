import{_ as t,c as a,o,ag as i}from"./chunks/framework.DPDPlp3K.js";const h=JSON.parse('{"title":"Type Alias: BootedObjectFieldDefinition<T>","description":"","frontmatter":{"editLink":false,"search":false,"next":false,"prev":false},"headers":[],"relativePath":"api/soukai/type-aliases/BootedObjectFieldDefinition.md","filePath":"api/soukai/type-aliases/BootedObjectFieldDefinition.md"}'),d={name:"api/soukai/type-aliases/BootedObjectFieldDefinition.md"};function l(r,e,n,s,c,p){return o(),a("div",null,e[0]||(e[0]=[i('<h1 id="type-alias-bootedobjectfielddefinition-t" tabindex="-1">Type Alias: BootedObjectFieldDefinition&lt;T&gt; <a class="header-anchor" href="#type-alias-bootedobjectfielddefinition-t" aria-label="Permalink to &quot;Type Alias: BootedObjectFieldDefinition\\&lt;T\\&gt;&quot;">​</a></h1><blockquote><p><strong>BootedObjectFieldDefinition</strong>&lt;<code>T</code>&gt; = <a href="./BootedFieldDefinitionBase.html"><code>BootedFieldDefinitionBase</code></a>&lt;<code>T</code>&gt; &amp; <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/NoelDeMartin/soukai/blob/80a9cd0653028a9a3e60c64c7a98a0e132615ce8/packages/soukai/src/models/fields.ts#L100" target="_blank" rel="noreferrer">packages/soukai/src/models/fields.ts:100</a></p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="fields" tabindex="-1">fields <a class="header-anchor" href="#fields" aria-label="Permalink to &quot;fields&quot;">​</a></h3><blockquote><p><strong>fields</strong>: <a href="./BootedFieldsDefinition.html"><code>BootedFieldsDefinition</code></a>&lt;<code>T</code>&gt;</p></blockquote><h3 id="type" tabindex="-1">type <a class="header-anchor" href="#type" aria-label="Permalink to &quot;type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <em>typeof</em> <a href="./../variables/FieldType.html#object"><code>Object</code></a></p></blockquote><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="t" tabindex="-1">T <a class="header-anchor" href="#t" aria-label="Permalink to &quot;T&quot;">​</a></h3><p><code>T</code> = <code>unknown</code></p>',11)]))}const b=t(d,[["render",l]]);export{h as __pageData,b as default};
