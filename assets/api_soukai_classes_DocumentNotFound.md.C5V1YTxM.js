import{_ as e,c as s,o as t,ag as r}from"./chunks/framework.DPDPlp3K.js";const k=JSON.parse('{"title":"Class: DocumentNotFound","description":"","frontmatter":{"editLink":false,"search":false,"next":false,"prev":false},"headers":[],"relativePath":"api/soukai/classes/DocumentNotFound.md","filePath":"api/soukai/classes/DocumentNotFound.md"}'),i={name:"api/soukai/classes/DocumentNotFound.md"};function o(n,a,c,l,h,d){return t(),s("div",null,a[0]||(a[0]=[r(`<h1 id="class-documentnotfound" tabindex="-1">Class: DocumentNotFound <a class="header-anchor" href="#class-documentnotfound" aria-label="Permalink to &quot;Class: DocumentNotFound&quot;">​</a></h1><p>Defined in: <a href="https://github.com/NoelDeMartin/soukai/blob/80a9cd0653028a9a3e60c64c7a98a0e132615ce8/packages/soukai/src/errors/DocumentNotFound.ts#L3" target="_blank" rel="noreferrer">packages/soukai/src/errors/DocumentNotFound.ts:3</a></p><h2 id="extends" tabindex="-1">Extends <a class="header-anchor" href="#extends" aria-label="Permalink to &quot;Extends&quot;">​</a></h2><ul><li><a href="./SoukaiError.html"><code>SoukaiError</code></a></li></ul><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;Constructor&quot;">​</a></h3><blockquote><p><strong>new DocumentNotFound</strong>(<code>id</code>, <code>collection?</code>): <code>DocumentNotFound</code></p></blockquote><p>Defined in: <a href="https://github.com/NoelDeMartin/soukai/blob/80a9cd0653028a9a3e60c64c7a98a0e132615ce8/packages/soukai/src/errors/DocumentNotFound.ts#L8" target="_blank" rel="noreferrer">packages/soukai/src/errors/DocumentNotFound.ts:8</a></p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="id" tabindex="-1">id <a class="header-anchor" href="#id" aria-label="Permalink to &quot;id&quot;">​</a></h5><p><code>string</code></p><h5 id="collection" tabindex="-1">collection? <a class="header-anchor" href="#collection" aria-label="Permalink to &quot;collection?&quot;">​</a></h5><p><code>string</code></p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>DocumentNotFound</code></p><h4 id="overrides" tabindex="-1">Overrides <a class="header-anchor" href="#overrides" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p><a href="./SoukaiError.html"><code>SoukaiError</code></a>.<a href="./SoukaiError.html#constructor"><code>constructor</code></a></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="collection-1" tabindex="-1">collection? <a class="header-anchor" href="#collection-1" aria-label="Permalink to &quot;collection?&quot;">​</a></h3><blockquote><p><code>readonly</code> <code>optional</code> <strong>collection</strong>: <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/NoelDeMartin/soukai/blob/80a9cd0653028a9a3e60c64c7a98a0e132615ce8/packages/soukai/src/errors/DocumentNotFound.ts#L6" target="_blank" rel="noreferrer">packages/soukai/src/errors/DocumentNotFound.ts:6</a></p><hr><h3 id="id-1" tabindex="-1">id <a class="header-anchor" href="#id-1" aria-label="Permalink to &quot;id&quot;">​</a></h3><blockquote><p><code>readonly</code> <strong>id</strong>: <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/NoelDeMartin/soukai/blob/80a9cd0653028a9a3e60c64c7a98a0e132615ce8/packages/soukai/src/errors/DocumentNotFound.ts#L5" target="_blank" rel="noreferrer">packages/soukai/src/errors/DocumentNotFound.ts:5</a></p><hr><h3 id="message" tabindex="-1">message <a class="header-anchor" href="#message" aria-label="Permalink to &quot;message&quot;">​</a></h3><blockquote><p><strong>message</strong>: <code>string</code></p></blockquote><p>Defined in: node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts:1077</p><h4 id="inherited-from" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./SoukaiError.html"><code>SoukaiError</code></a>.<a href="./SoukaiError.html#message"><code>message</code></a></p><hr><h3 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">​</a></h3><blockquote><p><strong>name</strong>: <code>string</code></p></blockquote><p>Defined in: node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts:1076</p><h4 id="inherited-from-1" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-1" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./SoukaiError.html"><code>SoukaiError</code></a>.<a href="./SoukaiError.html#name"><code>name</code></a></p><hr><h3 id="stack" tabindex="-1">stack? <a class="header-anchor" href="#stack" aria-label="Permalink to &quot;stack?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>stack</strong>: <code>string</code></p></blockquote><p>Defined in: node_modules/.pnpm/typescript@5.8.3/node_modules/typescript/lib/lib.es5.d.ts:1078</p><h4 id="inherited-from-2" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-2" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./SoukaiError.html"><code>SoukaiError</code></a>.<a href="./SoukaiError.html#stack"><code>stack</code></a></p><hr><h3 id="stacktracelimit" tabindex="-1">stackTraceLimit <a class="header-anchor" href="#stacktracelimit" aria-label="Permalink to &quot;stackTraceLimit&quot;">​</a></h3><blockquote><p><code>static</code> <strong>stackTraceLimit</strong>: <code>number</code></p></blockquote><p>Defined in: node_modules/.pnpm/@types+node@22.15.17/node_modules/@types/node/globals.d.ts:161</p><p>The <code>Error.stackTraceLimit</code> property specifies the number of stack frames collected by a stack trace (whether generated by <code>new Error().stack</code> or <code>Error.captureStackTrace(obj)</code>).</p><p>The default value is <code>10</code> but may be set to any valid JavaScript number. Changes will affect any stack trace captured <em>after</em> the value has been changed.</p><p>If set to a non-number value, or set to a negative number, stack traces will not capture any frames.</p><h4 id="inherited-from-3" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-3" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./SoukaiError.html"><code>SoukaiError</code></a>.<a href="./SoukaiError.html#stacktracelimit"><code>stackTraceLimit</code></a></p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="capturestacktrace" tabindex="-1">captureStackTrace() <a class="header-anchor" href="#capturestacktrace" aria-label="Permalink to &quot;captureStackTrace()&quot;">​</a></h3><blockquote><p><code>static</code> <strong>captureStackTrace</strong>(<code>targetObject</code>, <code>constructorOpt?</code>): <code>void</code></p></blockquote><p>Defined in: node_modules/.pnpm/@types+node@22.15.17/node_modules/@types/node/globals.d.ts:145</p><p>Creates a <code>.stack</code> property on <code>targetObject</code>, which when accessed returns a string representing the location in the code at which <code>Error.captureStackTrace()</code> was called.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> myObject</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Error.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">captureStackTrace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(myObject);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myObject.stack;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Similar to \`new Error().stack\`</span></span></code></pre></div><p>The first line of the trace will be prefixed with <code>\${myObject.name}: \${myObject.message}</code>.</p><p>The optional <code>constructorOpt</code> argument accepts a function. If given, all frames above <code>constructorOpt</code>, including <code>constructorOpt</code>, will be omitted from the generated stack trace.</p><p>The <code>constructorOpt</code> argument is useful for hiding implementation details of error generation from the user. For instance:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Create an error without stack trace to avoid calculating the stack trace twice.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stackTraceLimit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Error;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Error.stackTraceLimit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> error</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Error.stackTraceLimit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> stackTraceLimit;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Capture the stack trace above function b</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Error.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">captureStackTrace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(error, b); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Neither function c, nor b is included in the stack trace</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  throw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> error;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="targetobject" tabindex="-1">targetObject <a class="header-anchor" href="#targetobject" aria-label="Permalink to &quot;targetObject&quot;">​</a></h5><p><code>object</code></p><h5 id="constructoropt" tabindex="-1">constructorOpt? <a class="header-anchor" href="#constructoropt" aria-label="Permalink to &quot;constructorOpt?&quot;">​</a></h5><p><code>Function</code></p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-4" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-4" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./SoukaiError.html"><code>SoukaiError</code></a>.<a href="./SoukaiError.html#capturestacktrace"><code>captureStackTrace</code></a></p><hr><h3 id="preparestacktrace" tabindex="-1">prepareStackTrace() <a class="header-anchor" href="#preparestacktrace" aria-label="Permalink to &quot;prepareStackTrace()&quot;">​</a></h3><blockquote><p><code>static</code> <strong>prepareStackTrace</strong>(<code>err</code>, <code>stackTraces</code>): <code>any</code></p></blockquote><p>Defined in: node_modules/.pnpm/@types+node@22.15.17/node_modules/@types/node/globals.d.ts:149</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="err" tabindex="-1">err <a class="header-anchor" href="#err" aria-label="Permalink to &quot;err&quot;">​</a></h5><p><code>Error</code></p><h5 id="stacktraces" tabindex="-1">stackTraces <a class="header-anchor" href="#stacktraces" aria-label="Permalink to &quot;stackTraces&quot;">​</a></h5><p><code>CallSite</code>[]</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>any</code></p><h4 id="see" tabindex="-1">See <a class="header-anchor" href="#see" aria-label="Permalink to &quot;See&quot;">​</a></h4><p><a href="https://v8.dev/docs/stack-trace-api#customizing-stack-traces" target="_blank" rel="noreferrer">https://v8.dev/docs/stack-trace-api#customizing-stack-traces</a></p><h4 id="inherited-from-5" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-5" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./SoukaiError.html"><code>SoukaiError</code></a>.<a href="./SoukaiError.html#preparestacktrace"><code>prepareStackTrace</code></a></p>`,86)]))}const u=e(i,[["render",o]]);export{k as __pageData,u as default};
