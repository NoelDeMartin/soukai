import{_ as a,c as t,o,ag as c}from"./chunks/framework.DPDPlp3K.js";const T=JSON.parse('{"title":"Type Alias: MagicAttributeValue<T, TKey>","description":"","frontmatter":{"editLink":false,"search":false,"next":false,"prev":false},"headers":[],"relativePath":"api/soukai/type-aliases/MagicAttributeValue.md","filePath":"api/soukai/type-aliases/MagicAttributeValue.md"}'),i={name:"api/soukai/type-aliases/MagicAttributeValue.md"};function d(l,e,r,s,n,p){return o(),t("div",null,e[0]||(e[0]=[c('<h1 id="type-alias-magicattributevalue-t-tkey" tabindex="-1">Type Alias: MagicAttributeValue&lt;T, TKey&gt; <a class="header-anchor" href="#type-alias-magicattributevalue-t-tkey" aria-label="Permalink to &quot;Type Alias: MagicAttributeValue\\&lt;T, TKey\\&gt;&quot;">​</a></h1><blockquote><p><strong>MagicAttributeValue</strong>&lt;<code>T</code>, <code>TKey</code>&gt; = <code>T</code> <em>extends</em> <a href="./FieldsDefinition.html"><code>FieldsDefinition</code></a> ? <a href="./NestedMagicAttributes.html"><code>NestedMagicAttributes</code></a>&lt;<code>T</code>, <code>TKey</code>&gt; : <code>T</code> <em>extends</em> <a href="./FieldTypeValue.html"><code>FieldTypeValue</code></a> ? <a href="./ResolveFieldType.html"><code>ResolveFieldType</code></a>&lt;<code>T</code>, <code>TKey</code>&gt; : <code>T</code> <em>extends</em> infer R[] ? <code>R</code> <em>extends</em> <a href="./FieldTypeValue.html"><code>FieldTypeValue</code></a> ? <a href="./ResolveFieldType.html"><code>ResolveFieldType</code></a>&lt;<code>R</code>, <code>TKey</code>&gt;[] : <code>never</code> : <code>never</code></p></blockquote><p>Defined in: <a href="https://github.com/NoelDeMartin/soukai/blob/80a9cd0653028a9a3e60c64c7a98a0e132615ce8/packages/soukai/src/models/inference.ts#L62" target="_blank" rel="noreferrer">packages/soukai/src/models/inference.ts:62</a></p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="t" tabindex="-1">T <a class="header-anchor" href="#t" aria-label="Permalink to &quot;T&quot;">​</a></h3><p><code>T</code></p><h3 id="tkey" tabindex="-1">TKey <a class="header-anchor" href="#tkey" aria-label="Permalink to &quot;TKey&quot;">​</a></h3><p><code>TKey</code> <em>extends</em> <a href="./Key.html"><code>Key</code></a></p>',8)]))}const h=a(i,[["render",d]]);export{T as __pageData,h as default};
